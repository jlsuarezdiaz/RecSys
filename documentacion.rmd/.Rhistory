modularidad <- c(0.627, 0.658, 0.688, 0.710, 0.716, 0.730, 0.747, 0.744, 0.746, 0.737,
0.744, 0.734, 0.748, 0.734, 0.732, 0.730, 0.732, 0.731, 0.711, 0.709,
0.674, 0.656, 0.653)
num.comunid <- c(93,    65,    52,    51,    42,    41,    38,    34,    34,    26,
30,    25,    32,    23,    23,    24,    22,    20,    15,    17,
9,     7,     7)
tabla.comunidades <- data.frame(res = resolucion, mod = modularidad, ncom = num.comunid)
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.627, 0.658, 0.688, 0.710, 0.716, 0.730, 0.747, 0.744, 0.746, 0.737,
0.744, 0.734, 0.748, 0.734, 0.732, 0.730, 0.732, 0.731, 0.711, 0.709,
0.674, 0.656, 0.653)
num.comunid <- c(93,    65,    52,    51,    42,    41,    38,    34,    34,    26,
30,    25,    32,    23,    23,    24,    22,    20,    15,    17,
9,     7,     7)
tabla.comunidades <- data.frame(res = resolucion, mod = modularidad, ncom = num.comunid)
tabla.comunidades
read.csv("~/Escritorio/publ-sci2s-2014.csv")
install.packages("rmutil")
library(rmutil)
read.list("~/Escritorio/publ-sci2s-2014.csv")
readLines("~/Escritorio/publ-sci2s-2014.csv")
dat <- readLines("~/Escritorio/publ-sci2s-2014.csv")
strsplit(dat, ",")
strsplit(dat, ", ")
publs <- strsplit(dat, ", ")
publs
for(p in publs){}
for(p in publs){ print(p) }
edges <- data.frame("Source", "Target")
edges
edges <- data.frame
edges <- data.frame()
edges
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){}
for(j in 1:(i-1)){
}}}}
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
rbind(edges, c(p[i],p[j]))
}}}
edges
p
p[i]
p[j]
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
rbind(edges, data.frame(c(p[i],p[j])))
}}}
edges
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(c(p[i],p[j])))
}}}
edges
dim(edges)
edges <- data.frame()
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
data.frame(a = p[i], b=p[j])
p[i]
p[j]
publs
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
edges
edges <- data.frame()
names(edges) <- c("a", "b")
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
print(p[i]); print(p[j]);edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
publs
publs[[0]]
publs[[1]]
for(p in publs){
for(i in 1:length(p)){
for(j in 1:(i-1)){
print(p[i]); print(p[j]);edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
for(p in publs){
for(i in 1:length(p)){ print(p);
for(j in 1:(i-1)){
print(p[i]); print(p[j]);edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
for(p in publs){ print(p);
for(i in 1:length(p)){ print(i);
for(j in 1:(i-1)){ print(j);
print(p[i]); print(p[j]);edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
1:0
for(p in publs){ print(p);
for(i in 1:length(p)){ print(i);
if(i > 1) for(j in 1:(i-1)){ print(j);
print(p[i]); print(p[j]);edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
edges
head(edges)
edges <- data.frame()
for(p in publs){
for(i in 1:length(p)){
if(i > 1) for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
edges
dims(edges)
dim(edges)
head(edges)
write.csv(edges, "~/Escritorio/publ-sci2s-2014-edges.csv")
dat <- readLines("~/Escritorio/publ-sci2s-2014.csv")
strsplit(dat, ",")
publs <- strsplit(dat, ",")
for(p in publs){
for(i in 1:length(p)){
if(i > 1) for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
edges <- data.frame()
for(p in publs){
for(i in 1:length(p)){
if(i > 1) for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
dim(edges)
write.csv(edges, "~/Escritorio/publ-sci2s-2014-edges.csv")
edges
edges[4100:4200,]
publs <- strsplit(dat, ",")
publs
publs[[390]]
publs[[391]]
edges <- data.frame()
for(p in publs){
for(i in 1:length(p)){
if(i > 1) for(j in 1:(i-1)){
edges <- rbind(edges, data.frame(a = p[i], b= p[j] ))
}}}
?write.csv
write.csv(edges, "~/Escritorio/publ-sci2s-2014-edges.csv", quote = F, row.names=F, col.names=F)
setwd("~/Documentos/Master/Sociales/P1/Documentacion")
read.csv("results/datos.csv")
datos <- read.csv("results/datos.csv")
datos$componentnumber
datos$degree
hist(datos$degree)
mean(datos$degree < 8)
mean(datos$degree < 9)
mean(datos$degree <= 8)
mean(datos$degree >= 20)
mean(datos$degree >= 100)
median(datos$degree)
mean(datos$degree > 20 & datos$degree < 60)
median(datos$degree < 20)
mean(datos$degree < 20)
mean(datos$degree < 60)
sort(datos$degree)
hist(datos$degree, probability = T, breaks = 250)
hist(log(datos$degree), probability = T, breaks = 250)
hist(log(datos$degree), breaks = 250)
log(hist(datos$degree, probability = T, breaks = 250))
hist(log(datos$degree), breaks = 250)
h <- hist(log(datos$degree), breaks = 250)
h$counts
plot(log(h$counts))
plot(datos$degree, datos$clustering)
mean(datos$clustering==1)
mean(datos$clustering> 0.9)
mean(datos$clustering > 0.8)
mean(datos$clustering > 0.5)
plot(datos$clustering[datos$clustering < 1])
hist(datos$clustering[datos$clustering < 1], probability = T, breaks = 250)
hist(datos$clustering[datos$clustering < 1], probability = T, breaks = 100)
datos <- read.csv("results/datos.csv")
ggplot(datos, aes(x=degree, y=clustering)) + geom_points()
datos <- read.csv("results/datos.csv")
library(ggplot2)
ggplot(datos, aes(x=degree, y=clustering)) + geom_points()
datos <- read.csv("results/datos.csv")
library(ggplot2)
ggplot(datos, aes(x=degree, y=clustering)) + geom_point()
tabla.comunidades
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(res = resolucion, mod = modularidad, ncom = num.comunid)
tabla.comunidades
datos$closnesscentrality
0.31675*8
0.31675*8
0.31675*8
0.31675*8
0.31675*8
0.31675*8
0.31675*8
0.31675*8
0.31675*8
0.31675*8
0.31675*8
mean(datos$closnesscentrality)
mean(datos$closnesscentrality)*8
mean(1-datos$closnesscentrality)*8
mean(1/datos$closnesscentrality)*8
mean(1/datos$closnesscentrality)
mean(1/datos$closnesscentrality)
hist(1/datos$closnesscentrality)
std(1/datos$closnesscentrality)
sd(1/datos$closnesscentrality)
1/datos$closnesscentrality
1/datos$closnesscentrality
1/datos$closnesscentrality
max(1/datos$closnesscentrality)
edges
unique(edges['a'])
edges['a']
100+3681
unique(edges['a'])
edges['a]']
edges['a']
length(eges['a'])
length(edges['a'])
edges['a']
dim(edges['a'])
dim(unique(edges['a']))
unique(edges['a'])
as.vector(unique(edges['a']))
dim(unique(edges['a']))
unique(edges['a'])
unique(edges['a'])[1]
unique(edges['a'])[,1]
as.vector(edges['a'])
c(edges['a'])
c(edges['a'], edges['b'])
unique(c(edges['a'], edges['b']))
as.character(c(edges['a'], edges['b']))
as.vector(c(edges['a'], edges['b']))
unique(as.vector(c(edges['a'], edges['b'])))
datos$eccÃ§
datos$Eccentricity
hist(1/datos$closnesscentrality, probability = T, breaks = 7)
hist(1/datos$closnesscentrality, probability = T, breaks = 7)
hist(1/datos$closnesscentrality, probability = T, breaks = 8)
hist(1/datos$closnesscentrality, probability = T, breaks = 10)
hist(1/datos$closnesscentrality, probability = T, breaks = 2)
hist(1/datos$closnesscentrality, probability = T, breaks = 10)
1/datos$closnesscentrality
ggplot(datos, aes(x=1/closenesscentrality)) + geom_count()
ggplot(datos, aes(x=1/closnesscentrality)) + geom_count()
ggplot(datos, aes(x=1/closnesscentrality)) + geom_dotplot()
table(datos$closnesscentrality)
table(1/datos$closnesscentrality)
t <-table(1/datos$closnesscentrality)
names(t)
datos$hist_dist = table(1/datos$closnesscentrality)
w <- data.frame(x = unique(1/datos$closnesscentrality), y=table(1/datos$closnesscentrality))
w
w <- data.frame(table(1/datos$closnesscentrality))
w <- data.frame(table(1/datos$closnesscentrality))
names(w) = c("Distance", "Count")
ggplot(w, aes(x=Distance, y=Count)) + geom_point()
w <- data.frame(table(1/datos$closnesscentrality))
w <- as.numeric(w)
w
names(w) = c("Distance", "Count")
w
class(w$Distance)
w$Distance <- as.numeric(w$Distance)
w <- data.frame(table(1/datos$closnesscentrality))
names(w) = c("Distance", "Count")
w$Distance <- as.numeric(w$Distance)
ggplot(w, aes(x=Distance, y=Count)) + geom_point()
w$Distance <- as.numeric(as.character(w$Distance))
ggplot(w, aes(x=Distance, y=Count)) + geom_point()
w <- data.frame(table(1/datos$closnesscentrality))
names(w) = c("Distance", "Count")
w$Distance <- as.numeric(as.character(w$Distance))
ggplot(w, aes(x=Distance, y=Count)) + geom_point()
w <- data.frame(table(1/datos$closnesscentrality))
names(w) = c("Distance", "Count")
w$Distance <- as.numeric(as.character(w$Distance))
w <- data.frame(table(1/datos$closnesscentrality))
names(w) = c("Distance", "Count")
as.character(w$Distance)
as.numeric(as.character(w$Distance))
1/datos$closnesscentrality
2.3
2,3
w$Distance <- as.numeric(sub(",",".",as.character(w$Distance)))
ggplot(w, aes(x=Distance, y=Count)) + geom_point()
ggplot(w, aes(x=Distance)) + geom_hist()
ggplot(w, aes(x=Distance)) + geom_histogram()
ggplot(w, aes(x=Distance)) + geom_histogram(binwidth = 1)
ggplot(w, aes(x=Distance)) + geom_histogram(binwidth = 5)
ggplot(w, aes(x=Distance)) + geom_histogram(binwidth = 0.1)
datos$betweenesscentrality
mean(datos$betweenesscentrality > 0)
mean(datos$betweenesscentrality == 0)
mean(datos$betweenesscentrality == 0.3)
mean(datos$betweenesscentrality < 0.3)
mean(datos$eigencentrality < 0.3)
mean(datos$eigencentrality < 0.4)
mean(datos$eigencentrality < 0.5)
sort(datos$eigencentrality)
sort(datos$eigencentrality < 22)
mean(datos$eigencentrality < 22)
mean(datos$eigencentrality < 0.22)
mean(datos$eigencentrality < 0.34)
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(res = resolucion, mod = modularidad, ncom = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades)
ncom
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, id=resolution)
ncom <- melt(tabla.comunidades, id.vars = resolution)
ggplot(tabla.comunidades, aes(x=resolution, y=modularity))
ggplot(tabla.comunidades, aes(x=resolution, y=modularity)) + geom_line()
ggplot(tabla.comunidades, aes(x=resolution, y=modularity)) + geom_line() + geom_line(aes(y=n.communities))
iris
summary(iris)
# Load library
library(ggplot2)
# Start ggplot
ggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) # The aes() function is used to specify the X and Y axes
help(aes)
p <- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length))
p <- p + geom_point()
p
p + xlim(c(4,6)) + ylim(c(1,2)) # Remove elements outside limits
p + coord_cartesian(xlim=c(4,6), ylim=c(1,2)) # Zooms in...
p + labs(title="Iris", subtitle="flowers", y="Petal length", x="Sepal Length", caption="Fig. 1") # Customizing 1
p <- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) + geom_point(col="red", size=1)
p
p <- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) + geom_point(aes(col=Species), size=2)
p
ggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) + geom_point(aes(col=Species, size=Sepal.Width))
p + scale_colour_brewer(palette = "Oranges")
library(RColorBrewer)
brewer.pal.info
p + scale_x_continuous(breaks=seq(4, 8, 0.5)) # Changing breaks
p + scale_x_continuous(breaks=seq(4, 8, 0.5), labels = letters[1:9]) # Changing labels
p + geom_text(aes(label=Species))
p + geom_text(aes(label=substr(Species, 1, 3)))
ggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) + geom_point(aes(col=Species, shape=Species))
# Orange dataset: Growth of Orange Trees
Orange
ggplot(Orange, aes(x=age, y=circumference)) + geom_point() + facet_grid( ~ Tree)
ggplot(Orange, aes(x=age, y=circumference)) + geom_point() + facet_wrap( ~ Tree, nrow=3)
ggplot(Orange, aes(x=age, y=circumference)) + geom_point() + facet_wrap( ~ Tree, nrow=3, scales = "free")
ggplot(iris, aes(x=Sepal.Length)) + geom_histogram()
ggplot(iris, aes(x=Sepal.Length)) + geom_histogram(bins = 10)
ggplot(iris, aes(x=Sepal.Length)) + geom_histogram(binwidth = 1)
niris <- melt(iris)
ggplot(niris, aes(x=variable, y=value)) + geom_boxplot()
ggplot(niris, aes(x=variable, y=value)) + geom_boxplot(aes(fill=Species))
# VADeaths dataset: Death Rates in Virginia (1940)
VADeaths
library(reshape2)
ndeaths <- melt(VADeaths)
ndeaths
ggplot(ndeaths, aes(x=Var1, y=value)) + geom_point() + geom_line()
ggplot(ndeaths, aes(x=Var1, y=value, group=Var2)) + geom_point() + geom_line()
ggplot(ndeaths, aes(x=Var1, y=value, group=Var2)) + geom_point() + geom_line() + facet_grid(~ Var2)
ncom <- melt(tabla.comunidades, id.vars = resolution)
ncom <- melt(tabla.comunidades, measure.vars = c("modularity, n.communities"))
tabla.comunidades <- data.frame(resolution = resolucion, modularity = modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c("modularity, n.communities"))
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ncom
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ggplot(ncom, aes(x=resolution, y=value, group=variable)) + geom_line()
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ggplot(ncom, aes(x=resolution, y=value, group=variable)) + geom_line(aes(col=value))
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ggplot(ncom, aes(x=resolution, y=value, group=variable)) + geom_line(aes(col=variable))
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = 100*modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ggplot(ncom, aes(x=resolution, y=value, group=variable)) + geom_line(aes(col=variable))
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = 10*modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ggplot(ncom, aes(x=resolution, y=value, group=variable)) + geom_line(aes(col=variable))
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = 50*modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ggplot(ncom, aes(x=resolution, y=value, group=variable)) + geom_line(aes(col=variable))
resolucion  <- c(0.1,   0.2,   0.3,   0.4,   0.5,   0.6,   0.7,   0.8,   0.9,   1.0,
1.1,   1.2,   1.3,   1.4,   1.5,   1.6,   1.7,   1.8,   1.9,   2.0,
3.0,   4.0,   5.0)
modularidad <- c(0.527, 0.606, 0.640, 0.662, 0.692, 0.684, 0.703, 0.698, 0.699, 0.693,
0.696, 0.685, 0.687, 0.682, 0.678, 0.680, 0.670, 0.665, 0.665, 0.6649,
0.649, 0.649, 0.649)
num.comunid <- c(73,    59,    52,    49,    47,    42,    31,    28,    33,    25,
23,    20,    21,    17,    14,    12,    10,    9,    9,    8,
6,     6,     6)
tabla.comunidades <- data.frame(resolution = resolucion, modularity = 100*modularidad, n.communities = num.comunid)
library(reshape2)
ncom <- melt(tabla.comunidades, measure.vars = c(2,3))
ggplot(ncom, aes(x=resolution, y=value, group=variable)) + geom_line(aes(col=variable))
